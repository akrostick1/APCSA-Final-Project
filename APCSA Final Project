import java.lang.Math;
import java.util.Scanner;
import java.util.*;

class Match
{
    private int winningScore;
    private int losingScore;
    private int month;
    private int year;
    private Player player1;
    private Player player2;
    private Player winner
    
    public Match(int w, int l, int m, int y, Player p1, Player p2, Player w)
    {
        winningScore = w;
        losingScore = l;
        month = m;
        year = y;
        player1 = p1;
        player2 = p2;
        p1.addMatch(this);
        p2.addMatch(this);
        winner = w;
    }
    
    public String toString()
    {
        return player1.getName() + " vs. " + player2.getName() + "\nScore: " + winningScore + "-" + losingScore + "\nWinner: " + winner + "\nDate: " + month + "-" + year;
    }
}

class Player
{
    private double rating;
    private String name;
    private ArrayList<Match> matchHistory = null;
    private static int numPlayers = 0;
    private int playerID;
    
    public Player(String n)
    {
        name = n;
        rating = 0.0;
        numPlayers++;
        playerID = numPlayers;
    }
    
    public void addMatch (Match m)
    {
        matchHistory.add(m);
    }
    
    public void updateRating()
    {
        rating++;
    }
    
    public String displayMatchHistory()
    {
        String output = "";
        for (int i = 0; i < matchHistory.size(); i++)
        {
            output += matchHistory.get(i).toString();
        }
    }
    
    public String getName()
    {
        return name;
    }
    
    public double getRating()
    {
        return rating;
    }
    
    public int getPlayerID()
    {
        return PlayerID;
    }
    
    public int getNumPLayers()
    {
        return numPlayers;
    }
    
    public String toString()
    {
        return "Player profile:\nName: " + name + "\nRating: " + rating + "\nPlayer ID: " + playerID;
    }
}

class League
{
    private ArrayList<Player> playerList;
    
    public League()
    {
        playerList = null;
    }
    
    public void addPlayer(Player p)
    {
        playerList.add(p);
        for (int j = 1; j < playerList.size(); j++)
        {
        int currentElement = playerList.get(j).getRating();
        int possibleIndex = j;
        while (possibleIndex > 0 && currentElement < playerList.get(possibleIndex - 1).getRating())
            {
                playerList.get(possibleIndex) = playerList.get(possibleIndex - 1);
                possibleIndex--;
            }
        playerList.get(possibleIndex).getRating() = currentElement;
        }
    }
    
    public boolean isARegisteredPlayer(String n, int id)
    {
        for (int i = 0; i < playerList.size(); i++)
        {
            if (playerList.get(i).getName().equals(n) && playerList.get(i).getPlayerID() == id)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
    }
    
    public int getPlayer(pID)
    {
        for (int k = 0; k < playerList.size(); k++)
        {
            if (playerList.get(k).getPlayerID() == pID)
            {
                return playerList.get(k);
            }
        }
    }
    
    public int getPlayerWithName(name)
    {
        for (int k = 0; k < playerList.size(); k++)
        {
            if (playerList.get(k).getName().equals(name))
            {
                return playerList.get(k);
            }
        }
    }
    
    public String topTenPlayers()
    {
        return "Top 10 Players in the World\n" + playerList.get(size() - 10).getName() + " - " + playerList.get(size() - 10).getRating() + "\n" + playerList.get(size() - 9).getName() + " - " + playerList.get(size() - 9).getRating() + "\n" + playerList.get(size() - 8).getName() + " - " + playerList.get(size() - 8).getRating() + "\n" + playerList.get(size() - 7).getName() + " - " + playerList.get(size() - 7.getRating() + "\n" + playerList.get(size() - 6).getName() + " - " + playerList.get(size() - 6).getRating() + "\n" + playerList.get(size() - 5).getName() + " - " + playerList.get(size() - 5).getRating() + "\n" + playerList.get(size() - 4).getName() + " - " + playerList.get(size() - 4).getRating() + "\n" + playerList.get(size() - 3).getName() + " - " + playerList.get(size() - 3).getRating() + "\n" + playerList.get(size() - 2).getName() + " - " + playerList.get(size() - 2).getRating() + "\n" + playerList.get(size() - 1).getName() + " - " + playerList.get(size() - 1).getRating();
    }
}

public class Main
{
    public static void main(String[] args) 
    {
        Scanner scan = new Scanner(System.in);
        League pickleballLeague = new League();
        System.out.println("Hello! Welcome to Universal Pickleball Rating, the ultimate rating system for pickleball players around the world!");
        System.out.println(displayMainMenu());
        String option = scan.nextLine();
        while (!option.equals("q"))
        {
            if (option.equals("p"))
            {
                System.out.println("What is your name?")
                String playerName = scan.nextLine();
                System.out.println("What is your player ID?")
                int playerID = scan.nextInt();
                if (isAregisteredPlayer(playerName, playerID))
                {
                    System.out.println(pickleballLeague.getPlayer(playerID).toString());
                    System.outprintln(displayProfileMenu());
                    String option2 = scan.nextLine());
                    while (!option2.equals("e"))
                    {
                        if (option2.equals("h"))
                        {
                            pickleballLeague.getPlayer(playerID).displayMatchHistory();
                        }
                        else if (option2.equals("m"))
                        {
                            System.out.println("Your match only counts toward your rating if it was against a registered player.\nWhat is your name?");
                            String p1Name = scan.nextLine();
                            System.out.println("What was your opponents name?");
                            String p2Name = scan.nextLine();
                            System.out.println("What was the winner's score?");
                            int winScore = scan.nextInt();
                            System.out.println("What was the loser's score?");
                            int loseScore = scan.nextInt();
                            System.out.println("In what year was the match played?");
                            int yr = scan.nextInt();
                            System.out.println("In what month was the match played? (number 1-12)");
                            int mnth = scan.nextInt();
                            System.out.println("What is the name of the player that won?");
                            String winName = scan.nextLine();
                            Match m = new Match(winScore, loseScore, mnth, yr, pickleballLeague.getPlayerWithName(p1Name), pickleballLeague.getPlayerWithName(p2Name), pickleballLeague.getPlayerWithName(winName));
                            pickleballLeague.getPlayer(playerID).addMatch(m);
                        }
                        else
                        {
                            System.out.println("Invalid input! Please type an option from the profile menu:");
                        }
                        System.out.println(displayProfileMenu());
                        option2 = scan.nextLine();
                    }
                }
                else
                {
                    "You are not a registered player. Please select \"n\" to create a profile."
                }
            }
            else if (option.equals("n"))
            {
                System.out.println("Hello, new player! Let's get started and make your profile. What is your name?")
                {
                    String playerName = scan.nextLine();
                    Player p = new Player(playerName);
                    playerballLeague.addPlayer();
                    playerID = p.getPlayerID();
                    System.out.println("You now have a profile in Universal Pickleball Rating! Your player ID is " + playerID + ". Remember this to access your profile. Your current rating is 0.0, but as you play matches and add them to your profile, your rating will update. Welcome to UPR!");
                }
            }
            else if (option.equals("r"))
            {
                System.out.println(pickleballLeague.topTenPlayers());
            }
            else
            {
                System.out.println("Invalid input! Please type an option from the profile menu:");
            }
            System.out.println(displayMainMenu());
            option = scan.nextLine();
        }
    }
    
    public String displayMainMenu()
    {
        return "Menu:\nType \"p\" to see your profile if you are an existing player\nType \"n\" if you are a new player and would like to create a profile\nType \"r\" if you would like to see global rankings\nType \"q\" to quit";
    }
    
    public String displayProfileMenu()
    {
        return "Profile Menu:\nType \"h\" to see your match history over the last year\nType \"m\" to add a new match\nType \"e\" to exit and return to the main menu";
    }
}
